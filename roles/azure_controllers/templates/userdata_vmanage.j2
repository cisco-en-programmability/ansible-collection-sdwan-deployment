Content-Type: multipart/mixed; boundary="===============8815267485200512281=="
MIME-Version: 1.0

--===============8815267485200512281==
Content-Type: text/cloud-config; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cloud-config"


#cloud-config

disk_setup:
  /dev/disk/azure/scsi1/lun10:
    table_type: mbr
    layout: false
    overwrite: false
fs_setup:
- device: /dev/disk/azure/scsi1/lun10
  label: data
  partition: none
  filesystem: ext4
  overwrite: false
mounts:
- [ /dev/disk/azure/scsi1/lun10, /opt/data ]

write_files:
- path: /opt/web-app/etc/persona
  owner: vmanage:vmanage-admin
  permissions: '0644'
  content: '{"persona":"COMPUTE_AND_DATA"}'
- path: /etc/default/personality
  content: "vmanage\n"
- path: /etc/default/inited
  content: "1\n"
- path: /etc/confd/init/zcloud.xml
  content: |
    <config xmlns="http://tail-f.com/ns/config/1.0">
      <system xmlns="http://viptela.com/system">
        <host-name>{{ hostname }}</host-name>
        <personality>vmanage</personality>
        <device-model>vmanage</device-model>
        <system-ip>{{ system_ip }}</system-ip>
        <organization-name>{{ organization_name }}</organization-name>
        <sp-organization-name>{{ organization_name }}</sp-organization-name>
        <site-id>{{ site_id_vmanage }}</site-id>
        <vbond>
          <remote>{{ vbond_transport_public_ip | default(default_vbond_ip) }}</remote>
        </vbond>
        <aaa>
          <auth-order>local</auth-order>
          <auth-order>radius</auth-order>
          <auth-order>tacacs</auth-order>
          <user>
            <name>{{ admin_username }}</name>
            <password>{{ admin_password }}</password>
            <group>netadmin</group>
          </user>
        </aaa>
      </system>
      <vpn xmlns="http://viptela.com/vpn">
        <vpn-instance>
          <vpn-id>0</vpn-id>
            <interface>
              <if-name>eth1</if-name>
              <ip>
                <dhcp-client>true</dhcp-client>
              </ip>
              <tunnel-interface>
                <allow-service>
                  <dhcp>true</dhcp>
                  <dns>true</dns>
                  <ntp>true</ntp>
                  <icmp>true</icmp>
                  <sshd>true</sshd>
                  <netconf>true</netconf>
                  <https>true</https>
                </allow-service>
              </tunnel-interface>
              <shutdown>false</shutdown>
            </interface>
          <ip>
            <route>
              <prefix>0.0.0.0/0</prefix>
              <next-hop>
                <address>{{ vpn0_default_gateway }}</address>
              </next-hop>
            </route>
          </ip>
        </vpn-instance>
        <vpn-instance>
          <vpn-id>512</vpn-id>
          <interface>
            <if-name>eth0</if-name>
            <ip>
              <dhcp-client>true</dhcp-client>
            </ip>
            <shutdown>false</shutdown>
          </interface>
        </vpn-instance>
      </vpn>
    </config>

{% if vmanage_cluster_private_ip is defined %}
- path: /home/admin/customized.cfg
  content: |
    vpn 0
        interface eth2
            ip address {{ vmanage_cluster_private_ip }}/{{ vmanage_cluster_prefix }}
            no shutdown
        !
    !

bootcmd:
  - |
    cat << 'EOF' > /etc/customized.sh
    #!/bin/bash
    MAX_WAIT=1800
    WAIT_TIMER=30
    MAX_RETRY=20
    RETRY_TIMER=5

    success_file_name=/home/admin/success.log
    failure_file_name=/home/admin/failure.log

    start_time=`date +%s`
    while true
    do
        end_time=`date +%s`

        CONFD_IPC_ACCESS_FILE="/etc/confd/confd_ipc_secret"
        cloud_init_rerun="/home/admin/customized.cfg"
        export CONFD_IPC_ACCESS_FILE=/etc/confd/confd_ipc_secret

        if [ -f "$CONFD_IPC_ACCESS_FILE" ] && [ -f "$cloud_init_rerun" ];then
            sleep $WAIT_TIMER

            break_flap=0
            for retry_timer in `seq $MAX_RETRY`
            do
              confd_load -H -dd -lm -e -F c $cloud_init_rerun >> "$success_file_name" 2>&1
              if [ $? -eq 0 ];then
                echo success >> "$success_file_name"
                mv $cloud_init_rerun ${cloud_init_rerun}.bak
                break_flap=1
                break
              fi
              sleep $RETRY_TIMER
              echo "Retry: $retry_timer" >> "$success_file_name"
            done

            if [ $break_flap -eq 0 ];then
              echo "Load configure error" >> "$success_file_name"
            else
              echo "Load configure success" >> "$success_file_name"
            fi

            break
        fi

        if [ $((end_time - start_time)) -gt $MAX_WAIT ];then
            echo "start_time: $start_time" >> "$failure_file_name"
            echo "end_time: $end_time" >> "$failure_file_name"
            echo "end_time - start_time: $((end_time - start_time))" >> "$failure_file_name"
            echo "MAX_WAIT: $MAX_WAIT" >> "$failure_file_name"
            break
        fi;

        sleep 0.1

    done
    EOF
  - (nohup bash /etc/customized.sh >> /home/admin/customized_config.log 2>&1 )&
{% endif %}
--===============8815267485200512281==
