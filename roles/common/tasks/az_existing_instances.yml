# Copyright 2024 Cisco Systems, Inc. and its affiliates

---

# VN info
- name: Retrieve specific VN details
  azure.azcollection.azure_rm_virtualnetwork_info:
    resource_group: "{{ az_resource_group }}"
    name: "{{ az_virtual_network }}"
  register: az_virtualnetwork_info

- name: Initialize instances_info dictionary
  ansible.builtin.set_fact:
    instances_info: {}

- name: "Gather facts about all instances in resource_group: {{ az_resource_group }}"
  azure.azcollection.azure_rm_virtualmachine_info:
    resource_group: "{{ az_resource_group }}"
  register: az_instance_info
  when: az_virtualnetwork_info.virtualnetworks | length > 0


# We are working inside one VN, consider changing desing in order to maintain more VNs.
- name: Verify if there are instances with requested parameters already present
  when: az_instance_info is defined and az_instance_info.vms | length > 0
  block:
    - name: Set instance status and state, variable 'instances_info' will hold list of existing instances
      ansible.builtin.set_fact:
        instances_info: >-
          {{
            instances_info | default({}) | combine({
              instance_item.hostname: {
                'state': (az_instance_info.vms | selectattr('name', 'equalto', instance_item.hostname) | map(attribute='provisioning_state') | first)
              }
            }) if instance_item.hostname in (az_instance_info.vms | map(attribute='name') | list) else instances_info
          }}
      loop: "{{ instances_marked_for_deployment }}"
      loop_control:
        loop_var: instance_item
      when: instance_item | length > 0

    - name: Prompt user information about existing instances
      ansible.builtin.pause:
        prompt: |

          Detected instances with the same name as requested via configuration file:

          {{ instances_info | to_nice_yaml }}


          Instances defined withing configuration file will not be re-deployed. Please verify your instances.

          Do you want to continue? (yes/no) [yes]
      when: instances_info | length > 0
      register: user_response

    - name: Stop deployment if user response is 'no'
      ansible.builtin.meta: end_play
      when: instances_info | length > 0 and user_response.user_input | default('yes') | lower == 'no'
